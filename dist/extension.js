(()=>{"use strict";var t={112:function(t,n,e){var i=this&&this.__awaiter||function(t,n,e,i){return new(e||(e=Promise))((function(o,r){function a(t){try{s(i.next(t))}catch(t){r(t)}}function l(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(a,l)}s((i=i.apply(t,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.deactivate=n.activate=void 0;const o=e(496),r=e(391),a=e(258),l=e(17),s=e(147);function c(t,n){return i(this,void 0,void 0,(function*(){let e=yield o.window.showInputBox({placeHolder:"输入文件名称，请使用kebab命名方式",prompt:"按回车确定"});if(e=null==e?void 0:e.replace(/\s+/g,""),!e)return;let i=(()=>{let n=t.path.split("/").findIndex((t=>"src"===t));return-1===n?"":t.path.split("/").find(((t,e)=>e===n+2))+"-"})(),r=s.statSync(t.fsPath);const a=l.join(r.isDirectory()?t.fsPath:l.dirname(t.fsPath),`${e}.vue`);s.existsSync(a)?o.window.showErrorMessage("文件已存在"):s.writeFile(a,yield n(`${i}${e}`),(t=>{t?o.window.showInformationMessage(t.message):(o.window.showTextDocument(o.Uri.file(a)),o.window.showInformationMessage("创建成功!"))}))}))}n.activate=function(t){let n=o.commands.registerCommand("qf-elf.createTableColumnTemplate",(()=>{!function(){i(this,void 0,void 0,(function*(){let t=yield o.env.clipboard.readText();const n=o.window.activeTextEditor;if(!n)return;const e=n.selection;let i={};try{i=JSON.parse(t);let o=(t=>{let n="";for(const e in t)n+=`\n\t\t\t\t<el-table-column prop="${e}" label="${t[e]}">\n\t\t\t\t\t<template slot-scope="scope">\n\t\t\t\t\t\t{{ scope.row.${e} }}\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>`;return n})(i);n.edit((t=>t.replace(e,o)))}catch(t){o.window.showInformationMessage("选择的不是一个JSON对象，请复制一个JSON对象")}}))}()})),e=o.commands.registerCommand("qf-elf.createTableFile",(t=>{c(t,r.getTableTpl)})),l=o.commands.registerCommand("qf-elf.createFormItemTemplate",(t=>{!function(){i(this,void 0,void 0,(function*(){let t=yield o.env.clipboard.readText();const n=o.window.activeTextEditor;if(!n)return;const e=n.selection;let i={};try{i=JSON.parse(t);let o=(t=>{let n="";for(const e in t)n+=`\n\t\t\t\t<el-col :span="12">\n          <el-form-item prop="${e}">\n            <template #label>\n              <i class="iconfont icon-account"></i>\n            </template>\n            <el-input v-model.trim="form.${e}" placeholder="${t[e]}" maxlength="30" clearable></el-input>\n          </el-form-item>\n        </el-col>\n\t\t\t\t`;return n})(i);n.edit((t=>t.replace(e,o)))}catch(t){o.window.showInformationMessage("选择的不是一个JSON对象，请复制一个JSON对象")}}))}()})),s=o.commands.registerCommand("qf-elf.createFormFile",(t=>{c(t,a.getFormTpl)}));t.subscriptions.push(n),t.subscriptions.push(e),t.subscriptions.push(l),t.subscriptions.push(s)},n.deactivate=function(){}},258:function(t,n,e){var i=this&&this.__awaiter||function(t,n,e,i){return new(e||(e=Promise))((function(o,r){function a(t){try{s(i.next(t))}catch(t){r(t)}}function l(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(a,l)}s((i=i.apply(t,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.getFormTpl=void 0;const o=e(496);let r;function a(){return i(this,void 0,void 0,(function*(){let t=yield o.env.clipboard.readText();if(o.window.activeTextEditor)try{let n=JSON.parse(t);return r=n,(t=>{let n="";for(const e in t)n+=`\n\t\t\t\t<el-col :span="12">\n          <el-form-item prop="${e}">\n            <template #label>\n              <i class="iconfont icon-account"></i>\n            </template>\n            <el-input v-model.trim="form.${e}" placeholder="${t[e]}" maxlength="30" clearable></el-input>\n          </el-form-item>\n        </el-col>\n        `;return n})(n)}catch(t){return""}}))}n.getFormTpl=t=>i(void 0,void 0,void 0,(function*(){var n,e,i;return yield a(),`<template>\n  <div id="${t}">\n    <qf-inner-sub-title class="mb-13" icon="icon-article-line" title="标题"></qf-inner-sub-title>\n\n    <el-form class="qf-form" :model="form" ref="form" :rules="rules" label-width="45px" :hide-required-asterisk="true">\n      <el-row :gutter="30">\n        \n        ${null!==(n=yield a())&&void 0!==n?n:""}\n        \n      </el-row>\n    </el-form>\n\n    <div class="dialog-footer">\n      <el-button class="qf-plain-btn" @click="cancel">取消</el-button>\n      <el-button type="primary" @click="ok">保存</el-button>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: '${t}',\n\n  inject: ['$dialogRef'],\n\n  data() {\n    return {\n      form: ${null!==(i=null===(e=JSON.stringify(r))||void 0===e?void 0:e.replace("/,/g","\r\n ,"))&&void 0!==i?i:""},\n      rules: {}\n    };\n  },\n\n  methods: {\n    cancel() {\n      this.$dialogRef.close();\n    },\n    ok() {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.$dialogRef.onOk();\n        }\n      });\n    }\n  }\n};\n<\/script>\n\n<style lang="less" scoped>\n</style>\n  `}))},391:function(t,n,e){var i=this&&this.__awaiter||function(t,n,e,i){return new(e||(e=Promise))((function(o,r){function a(t){try{s(i.next(t))}catch(t){r(t)}}function l(t){try{s(i.throw(t))}catch(t){r(t)}}function s(t){var n;t.done?o(t.value):(n=t.value,n instanceof e?n:new e((function(t){t(n)}))).then(a,l)}s((i=i.apply(t,n||[])).next())}))};Object.defineProperty(n,"__esModule",{value:!0}),n.getTableTpl=void 0;const o=e(496);n.getTableTpl=t=>i(void 0,void 0,void 0,(function*(){var n;return`<template>\n  <div id="${t}">\n    <el-table class="qf-table" :data="listData" style="width: 100%">\n      ${null!==(n=yield function(){return i(this,void 0,void 0,(function*(){let t=yield o.env.clipboard.readText();if(o.window.activeTextEditor)try{return(t=>{let n="";for(const e in t)n+=`\n\t\t\t\t<el-table-column prop="${e}" label="${t[e]}">\n\t\t\t\t\t<template slot-scope="scope">\n\t\t\t\t\t\t{{ scope.row.${e} }}\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n        `;return n})(JSON.parse(t))}catch(t){return""}}))}())&&void 0!==n?n:""}\n    </el-table>\n\n    <div class="text-right mt6" v-if="listData.total != 0">\n      <el-pagination\n        background\n        layout="total,prev, pager, next"\n        :current-page="queryParams.page"\n        @current-change="paginChange"\n        :total="listData.total"\n        :page-size="queryParams.page_size"\n      >\n      </el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport debounce from '@utils/debounce';\n\nexport default {\n  name: '${t}',\n\n  data() {\n    return {\n      queryParams: {\n        page: 1,\n        page_size: 10\n      },\n      listData: {}\n    };\n  },\n\n  methods: {\n    /**\n     * 搜索\n     */\n    searchOnInput(value) {\n      debounce(() => {\n        this.queryParams.search = value;\n        this.getList();\n      }, 300);\n    },\n    /**\n     * 分页\n     */\n    paginChange(page) {\n      this.queryParams.page = page;\n      this.getList();\n    },\n    /**\n     * 获取列表\n     */\n    async getList() {\n      await this.$nextTick();\n      const loading = this.$loading({\n        target: '#${t}',\n        body: false,\n        text: '正在获取数据...'\n      });\n\n      // 这里记得修改成实际的模块名和接口名\n      let result = await this.$api.模块名.getList().catch(err => {\n        this.$message.error('获取列表失败');\n        console.error(err);\n      });\n\n      if (result) {\n        this.listData = result;\n      }\n\n      loading.close();\n    }\n  }\n};\n<\/script>\n\n<style lang="less" scoped>\n</style>\n`}))},496:t=>{t.exports=require("vscode")},147:t=>{t.exports=require("fs")},17:t=>{t.exports=require("path")}},n={},e=function e(i){var o=n[i];if(void 0!==o)return o.exports;var r=n[i]={exports:{}};return t[i].call(r.exports,r,r.exports,e),r.exports}(112);module.exports=e})();